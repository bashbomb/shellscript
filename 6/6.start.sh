#!/bin/bash
set -euo pipefail

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
reset=$(tput sgr0)

clear
cat << EOF

   ____            _         ____  _          _ _     ____            _       _     _ 
  | __ )  __ _ ___| |__     / ___|| |__   ___| | |   / ___|  ___ _ __(_)_ __ | |_  | |
  |  _ \ / _\` / __| '_ \    \___ \| '_ \ / _ \ | |   \___ \ / __| '__| | '_ \| __| | |
  | |_) | (_| \__ \ | | |    ___) | | | |  __/ | |    ___) | (__| |  | | |_) | |_  |_|
  |____/ \__,_|___/_| |_|   |____/|_| |_|\___|_|_|   |____/ \___|_|  |_| .__/ \__| (_)


6. 고급 명령어
  - ${yellow}CUT${reset}
    : 간결한 문법으로 파일에서 문자열 필드를 뽑아내는 커맨드
  - ${green}SED${reset}
    : 텍스트 입력 스트림을 받아 출력을 제어할 수 있는 커맨드
  - ${green}AWK${reset}
    : sed기능 + 변수/함수/연산자를 사용하여 필요한 데이터를 제어할 수 있는 프로그램이이 가능한 커맨드

EOF

echo -n "Next sed y/n : "
read A
[ ${A} == y ] && ./6/6-0-0.sh || ./main.sh

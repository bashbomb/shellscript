#!/bin/bash
set -euo pipefail

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
reset=$(tput sgr0)

clear
cat << EOF

   ____            _         ____  _          _ _     ____            _       _     _ 
  | __ )  __ _ ___| |__     / ___|| |__   ___| | |   / ___|  ___ _ __(_)_ __ | |_  | |
  |  _ \ / _\` / __| '_ \    \___ \| '_ \ / _ \ | |   \___ \ / __| '__| | '_ \| __| | |
  | |_) | (_| \__ \ | | |    ___) | | | |  __/ | |    ___) | (__| |  | | |_) | |_  |_|
  |____/ \__,_|___/_| |_|   |____/|_| |_|\___|_|_|   |____/ \___|_|  |_| .__/ \__| (_)



0. 오리엔테이션

  - 무엇을 배우는가

    - ${green}기초${reset}편
      - 현업에서 서버로 가장 많이 사용하는 운영체제인 리눅스의
        - 명령어와 유용한 옵션
	- 명령어의 조합을 이용한 간단 쉘 스크립트
	- 조건/반복 등의 문법을 추가한 쉘 스크립트

    - ${green}실전${reset}편
      - 실 서비스 환경에서의 ${red}트러블 슈팅${reset}과 ${red}운용${reset}을 위한
        - 명령어의 활용
	- 쉘 스크립트의 작성
      - 쉘 스크립트 뿐만이 아니라 
        - 서버 환경을 구축하는 큰 그림
	- 서버 구축에 필요한 기초 지식과 흐름
	- 트러블 슈팅에 필요한 기초 지식과 흐름






EOF

echo -n "Next 어디에서 쓸 수 있는가 y/n : "
read A
[ ${A} == y ] && ./0/0-2.sh || ./0/0-0.sh

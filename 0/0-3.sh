#!/bin/bash
set -euo pipefail

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
reset=$(tput sgr0)

clear
cat << EOF

   ____            _         ____  _          _ _     ____            _       _     _ 
  | __ )  __ _ ___| |__     / ___|| |__   ___| | |   / ___|  ___ _ __(_)_ __ | |_  | |
  |  _ \ / _\` / __| '_ \    \___ \| '_ \ / _ \ | |   \___ \ / __| '__| | '_ \| __| | |
  | |_) | (_| \__ \ | | |    ___) | | | |  __/ | |    ___) | (__| |  | | |_) | |_  |_|
  |____/ \__,_|___/_| |_|   |____/|_| |_|\___|_|_|   |____/ \___|_|  |_| .__/ \__| (_)



0. 오리엔테이션

  - 어떻게 배우는가

    - ${green}기초${reset}편
      - bottom - up 방식
      - 리눅스의 CLI환경과 명령어에 익숙해지도록 예제와 퀴즈를 통해 실습
      - ${yellow}현직 시스템엔지니어가 자주 사용하는 명령어 패턴${reset}으로 실무에서의 쓰임새를 전달


    - ${green}실전${reset}편
      - semi top - down 방식
      - 롤 플레잉 기법을 활용
        - 가상의 스타트 업 회사 안에서의 시스템과 시나리오를 구성
      - 시스템 구성은 클라우드와 데이터센터 어느 쪽에서도 사용하는 구조를 선택
      - ${red}서버 구축${reset}, ${red}트러블 슈팅${reset} 등 실무에서 일어날 수 있는 상황에서 일을 처리하는 흐름을 배우고,
        그 안에서 쉘 스크립트를 작성하여 문제 해결하는 ${yellow}실전 감각${reset}을 익힘







EOF

echo -n "오리엔테이션 종료 : "
read A
[ ${A} == y ] && ./main.sh || ./main.sh
